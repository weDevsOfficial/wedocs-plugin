{"version":3,"file":"editor.js","mappings":"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","sources":["webpack://weDocs/./src/editor/AiDocWriter.js","webpack://weDocs/./src/editor/AiDocWriterModal.js","webpack://weDocs/./src/editor/AiDocWriterPreview.js","webpack://weDocs/./src/utils/aiService.js","webpack://weDocs/external window \"React\"","webpack://weDocs/external window [\"wp\",\"components\"]","webpack://weDocs/external window [\"wp\",\"coreData\"]","webpack://weDocs/external window [\"wp\",\"data\"]","webpack://weDocs/external window [\"wp\",\"editPost\"]","webpack://weDocs/external window [\"wp\",\"editor\"]","webpack://weDocs/external window [\"wp\",\"element\"]","webpack://weDocs/external window [\"wp\",\"i18n\"]","webpack://weDocs/external window [\"wp\",\"plugins\"]","webpack://weDocs/webpack/bootstrap","webpack://weDocs/webpack/runtime/compat get default export","webpack://weDocs/webpack/runtime/define property getters","webpack://weDocs/webpack/runtime/hasOwnProperty shorthand","webpack://weDocs/webpack/runtime/make namespace object"],"sourcesContent":["import { __ } from '@wordpress/i18n';\nimport { useState } from '@wordpress/element';\nimport { registerPlugin } from '@wordpress/plugins';\nimport { PluginSidebar } from '@wordpress/edit-post';\nimport { useSelect } from '@wordpress/data';\nimport { store as editorStore } from '@wordpress/editor';\nimport { store as coreStore } from '@wordpress/core-data';\nimport AiDocWriterModal from './AiDocWriterModal';\n\nconst AiDocWriter = () => {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    // Check if we're in the docs post type\n    const { isViewable, postTypeName } = useSelect((select) => {\n        const postType = select(editorStore).getCurrentPostType();\n        const postTypeObject = select(coreStore).getPostType(postType);\n        return {\n            isViewable: postTypeObject?.viewable,\n            postTypeName: postType,\n        };\n    }, []);\n\n    // Only show for docs post type\n    if (!isViewable || postTypeName !== 'docs') {\n        return null;\n    }\n\n    console.log('AiDocWriter component rendered for docs post type, isModalOpen:', isModalOpen);\n\n    return (\n        <>\n            <PluginSidebar\n                name=\"wedocs-ai-doc-writer\"\n                title={__('AI Doc Writer', 'wedocs')}\n                icon=\"edit\"\n            >\n                <div style={{ padding: '16px' }}>\n                    <p style={{ marginBottom: '16px', fontSize: '14px', color: '#666' }}>\n                        {__('Generate AI-powered documentation content with advanced language models.', 'wedocs')}\n                    </p>\n                    \n                    <button\n                        onClick={() => {\n                            console.log('Opening AI Doc Writer modal');\n                            setIsModalOpen(true);\n                        }}\n                        className=\"button button-primary\"\n                        style={{ \n                            width: '100%',\n                            height: '40px',\n                            fontSize: '14px',\n                            fontWeight: '500'\n                        }}\n                    >\n                        {__('Open AI Doc Writer', 'wedocs')}\n                    </button>\n                </div>\n            </PluginSidebar>\n\n            {isModalOpen && (\n                <AiDocWriterModal\n                    isOpen={isModalOpen}\n                    onClose={() => {\n                        console.log('Closing AI Doc Writer modal');\n                        setIsModalOpen(false);\n                    }}\n                />\n            )}\n        </>\n    );\n};\n\n// Register the plugin\nregisterPlugin('wedocs-ai-doc-writer', {\n    render: AiDocWriter,\n    icon: 'edit',\n});","import { __ } from '@wordpress/i18n';\nimport { useState, useEffect } from '@wordpress/element';\nimport {\n    Modal,\n    Button,\n    TextControl,\n    TextareaControl,\n    ToggleControl,\n    Notice,\n    Spinner,\n    PanelBody,\n    PanelRow,\n    Card,\n    CardBody,\n    CardHeader,\n    Flex,\n    FlexItem,\n    __experimentalHStack as HStack,\n    __experimentalVStack as VStack,\n} from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport AiDocWriterPreview from './AiDocWriterPreview';\nimport aiService from '../utils/aiService';\n\nconst AiDocWriterModal = ({ isOpen, onClose }) => {\n    const [title, setTitle] = useState('');\n    const [prompt, setPrompt] = useState('');\n    const [keywords, setKeywords] = useState('');\n    const [overwriteContent, setOverwriteContent] = useState(false);\n    const [isGenerating, setIsGenerating] = useState(false);\n    const [generatedContent, setGeneratedContent] = useState('');\n    const [showPreview, setShowPreview] = useState(false);\n    const [error, setError] = useState('');\n\n    // Get current post data\n    const currentPost = useSelect((select) => {\n        const { getCurrentPost, getEditedPostContent } = select('core/editor');\n        const post = getCurrentPost();\n        const content = getEditedPostContent();\n        \n        console.log('Post from getCurrentPost:', post);\n        console.log('Content from getEditedPostContent:', content);\n        \n        return {\n            ...post,\n            content: {\n                raw: content,\n                rendered: content\n            }\n        };\n    }, []);\n\n    // Pre-fill title with current post title\n    useEffect(() => {\n        if (currentPost?.title && !title) {\n            setTitle(currentPost.title);\n        }\n    }, [currentPost, title]);\n\n    // Generate dynamic prompt from title and keywords\n    const generateDynamicPrompt = (docTitle, docKeywords) => {\n        if (!docTitle && !docKeywords) {\n            return __(\n                \"Generate documentation using HTML heading tags for the title. Include details on {Documentation Keywords} and wrap all content in <p> tags. Highlight headings and keywords with <span class='highlight'>.\",\n                'wedocs'\n            );\n        }\n\n        let dynamicPrompt = __(\n            \"Generate documentation using HTML heading tags for '{title}'. Include relevant details on {keywords} in the documentation. Wrap all content in <p> tags. Highlight headings and keywords with <span class='highlight'>.\",\n            'wedocs'\n        );\n\n        // Replace placeholders with actual values\n        if (docTitle) {\n            dynamicPrompt = dynamicPrompt.replace('{title}', docTitle);\n        } else {\n            dynamicPrompt = dynamicPrompt.replace(\"for '{title}'\", 'for the title');\n        }\n\n        if (docKeywords) {\n            dynamicPrompt = dynamicPrompt.replace('{keywords}', docKeywords);\n        } else {\n            dynamicPrompt = dynamicPrompt.replace('Include relevant details on {keywords} in the documentation.', 'Include relevant details in the documentation.');\n        }\n\n        return dynamicPrompt;\n    };\n\n    // Update prompt when title or keywords change\n    useEffect(() => {\n        const dynamicPrompt = generateDynamicPrompt(title, keywords);\n        setPrompt(dynamicPrompt);\n    }, [title, keywords]);\n\n    // Validate AI-generated content\n    const validateGeneratedContent = (content) => {\n        const errors = [];\n        \n        // Check if content is empty\n        if (!content || content.trim().length === 0) {\n            errors.push(__('Generated content is empty.', 'wedocs'));\n            return { isValid: false, errors };\n        }\n\n        // Check for basic HTML structure\n        const hasParagraphs = /<p[^>]*>.*?<\\/p>/i.test(content);\n        const hasHeadings = /<h[1-6][^>]*>.*?<\\/h[1-6]>/i.test(content);\n        \n        if (!hasParagraphs && !hasHeadings) {\n            errors.push(__('Generated content should contain at least paragraphs or headings.', 'wedocs'));\n        }\n\n        // Check for potentially dangerous HTML (basic XSS prevention)\n        const dangerousPatterns = [\n            /<script[^>]*>.*?<\\/script>/gi,\n            /<iframe[^>]*>.*?<\\/iframe>/gi,\n            /javascript:/gi,\n            /on\\w+\\s*=/gi\n        ];\n\n        for (const pattern of dangerousPatterns) {\n            if (pattern.test(content)) {\n                errors.push(__('Generated content contains potentially unsafe HTML elements.', 'wedocs'));\n                break;\n            }\n        }\n\n        // Check for minimum content length\n        const textContent = content.replace(/<[^>]*>/g, '').trim();\n        if (textContent.length < 50) {\n            errors.push(__('Generated content is too short. Please try again with more specific keywords.', 'wedocs'));\n        }\n\n        // Check for maximum content length (prevent extremely long content)\n        if (textContent.length > 10000) {\n            errors.push(__('Generated content is too long. Please try again with more focused keywords.', 'wedocs'));\n        }\n\n        return {\n            isValid: errors.length === 0,\n            errors\n        };\n    };\n\n    const handleGenerate = async () => {\n        if (!title.trim()) {\n            setError(__('Please enter a documentation title.', 'wedocs'));\n            return;\n        }\n\n        if (!keywords.trim()) {\n            setError(__('Please enter keywords to guide the AI.', 'wedocs'));\n            return;\n        }\n\n        setError('');\n        setIsGenerating(true);\n\n        try {\n            // Get AI settings to determine provider and model\n            const aiSettings = await aiService.getAiSettings();\n            \n            // Check if AI is properly configured\n            if (!aiSettings.providers[aiSettings.default_provider]?.api_key) {\n                // Fall back to mock content if AI is not configured\n                console.warn('AI not configured, using mock content');\n                const mockContent = `\n                    <h2><span class=\"highlight\">Introduction</span></h2>\n                    <p>This is AI-generated content for: <strong>${title}</strong></p>\n                    <p>Keywords: <span class=\"highlight\">${keywords}</span></p>\n                    <p>Overwrite mode: <strong>${overwriteContent ? 'Enabled' : 'Disabled'}</strong></p>\n                    <p>Prompt used: <em>${prompt.substring(0, 100)}${prompt.length > 100 ? '...' : ''}</em></p>\n                    <h2><span class=\"highlight\">Key Features</span></h2>\n                    <p>Based on your keywords and instructions, here's the generated content. This is a comprehensive guide that covers all the important aspects of the topic you've specified. The content is structured with proper headings and paragraphs to ensure good readability and organization.</p>\n                    <h2><span class=\"highlight\">Detailed Information</span></h2>\n                    <p>This section provides more detailed information about the topic. The AI has generated relevant content based on your keywords and title. The content follows proper HTML structure with headings and paragraphs as requested.</p>\n                    <h2><span class=\"highlight\">Conclusion</span></h2>\n                    <p>This content was generated using AI and can be customized as needed. The validation ensures that the content meets quality standards and is safe to use in your documentation.</p>\n                `;\n                \n                const validation = validateGeneratedContent(mockContent);\n                if (!validation.isValid) {\n                    setError(validation.errors.join(' '));\n                    return;\n                }\n                \n                setGeneratedContent(mockContent);\n                setShowPreview(true);\n                return;\n            }\n\n            // Use AI service to generate content\n            const systemPrompt = __(\n                'You are a professional documentation writer. Generate comprehensive, well-structured documentation content using HTML tags. Use proper heading hierarchy (h2, h3, etc.) and wrap all content in paragraph tags. Highlight important terms with <span class=\"highlight\"> tags.',\n                'wedocs'\n            );\n\n            const result = await aiService.generateContent(prompt, {\n                provider: aiSettings.default_provider,\n                model: aiSettings.providers[aiSettings.default_provider].selected_model,\n                feature: 'ai_doc_writer',\n                systemPrompt: systemPrompt,\n                maxTokens: 2000,\n                temperature: 0.7\n            });\n\n            if (!result.content) {\n                throw new Error(__('AI service returned empty content', 'wedocs'));\n            }\n\n            // Validate the generated content\n            const validation = validateGeneratedContent(result.content);\n            \n            if (!validation.isValid) {\n                setError(validation.errors.join(' '));\n                return;\n            }\n            \n            setGeneratedContent(result.content);\n            setShowPreview(true);\n        } catch (err) {\n            console.error('AI generation error:', err);\n            setError(err.message || __('Failed to generate content. Please try again.', 'wedocs'));\n        } finally {\n            setIsGenerating(false);\n        }\n    };\n\n    const handleAccept = () => {\n        // TODO: Implement content insertion logic\n        console.log('Accepting content:', generatedContent);\n        console.log('Overwrite mode:', overwriteContent);\n        onClose();\n    };\n\n    const handleReject = () => {\n        setShowPreview(false);\n        setGeneratedContent('');\n    };\n\n    const handleClose = () => {\n        setShowPreview(false);\n        setGeneratedContent('');\n        setError('');\n        onClose();\n    };\n\n    return (\n        <Modal\n            title={__('AI Doc Writer', 'wedocs')}\n            onRequestClose={handleClose}\n            className=\"wedocs-ai-doc-writer-modal\"\n            size=\"large\"\n        >\n            {!showPreview ? (\n                <VStack spacing={4}>\n                    <Card>\n                        <CardHeader>\n                            <h3>{__('Content Generation Settings', 'wedocs')}</h3>\n                        </CardHeader>\n                        <CardBody>\n                            <VStack spacing={3}>\n                                <TextControl\n                                    label={__('Documentation Title', 'wedocs')}\n                                    value={title}\n                                    onChange={setTitle}\n                                    placeholder={__('Enter your documentation title here...', 'wedocs')}\n                                    help={__('The title will be used to generate relevant content.', 'wedocs')}\n                                    __nextHasNoMarginBottom\n                                />\n\n                                <TextControl\n                                    label={__('Keywords', 'wedocs')}\n                                    value={keywords}\n                                    onChange={setKeywords}\n                                    placeholder={__('Add keywords to guide AI (comma-separated)...', 'wedocs')}\n                                    help={__('Enter relevant keywords separated by commas.', 'wedocs')}\n                                    __nextHasNoMarginBottom\n                                />\n\n                                <TextareaControl\n                                    label={__('AI Instructions', 'wedocs')}\n                                    value={prompt}\n                                    onChange={setPrompt}\n                                    rows={4}\n                                    placeholder={__('AI instructions will be auto-generated from title and keywords...', 'wedocs')}\n                                    help={__('Instructions are automatically generated from your title and keywords. You can edit them manually if needed.', 'wedocs')}\n                                    __nextHasNoMarginBottom\n                                />\n\n                                <ToggleControl\n                                    label={__('Overwrite your existing Doc', 'wedocs')}\n                                    checked={overwriteContent}\n                                    onChange={setOverwriteContent}\n                                    help={__('When enabled, AI content will replace the entire document. When disabled, content will be inserted at the current cursor position.', 'wedocs')}\n                                />\n                            </VStack>\n                        </CardBody>\n                    </Card>\n\n                    {error && (\n                        <Notice status=\"error\" isDismissible={false}>\n                            {error}\n                        </Notice>\n                    )}\n\n                    <HStack justify=\"flex-end\" spacing={2}>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            {__('Cancel', 'wedocs')}\n                        </Button>\n                        <Button\n                            variant=\"primary\"\n                            onClick={handleGenerate}\n                            disabled={isGenerating}\n                        >\n                            {isGenerating ? (\n                                <>\n                                    <Spinner />\n                                    {__('Generating...', 'wedocs')}\n                                </>\n                            ) : (\n                                __('Generate Content', 'wedocs')\n                            )}\n                        </Button>\n                    </HStack>\n                </VStack>\n            ) : (\n                <AiDocWriterPreview\n                    content={generatedContent}\n                    onAccept={handleAccept}\n                    onReject={handleReject}\n                    onClose={handleClose}\n                />\n            )}\n        </Modal>\n    );\n};\n\nexport default AiDocWriterModal;\n","import { __ } from '@wordpress/i18n';\nimport { Button, Notice, Card, CardBody, CardHeader, __experimentalHStack as HStack, __experimentalVStack as VStack } from '@wordpress/components';\n\nconst AiDocWriterPreview = ({ content, onAccept, onReject, onClose }) => {\n    return (\n        <VStack spacing={4}>\n            <Card>\n                <CardHeader>\n                    <h3>{__('AI Generated Content Preview', 'wedocs')}</h3>\n                </CardHeader>\n                <CardBody>\n                    <p>\n                        {__(\n                            'Review the generated content below. You can accept it to insert into your document or reject it to try again.',\n                            'wedocs'\n                        )}\n                    </p>\n                </CardBody>\n            </Card>\n\n            <Card>\n                <CardBody>\n                    <div \n                        dangerouslySetInnerHTML={{ __html: content }}\n                        style={{\n                            border: '1px solid #ddd',\n                            padding: '16px',\n                            borderRadius: '4px',\n                            backgroundColor: '#f9f9f9',\n                            maxHeight: '400px',\n                            overflowY: 'auto'\n                        }}\n                    />\n                </CardBody>\n            </Card>\n\n            <Notice status=\"info\" isDismissible={false}>\n                {__(\n                    'The content above is formatted with HTML tags. When inserted, it will be properly formatted in your document.',\n                    'wedocs'\n                )}\n            </Notice>\n\n            <HStack justify=\"flex-end\" spacing={2}>\n                <Button\n                    variant=\"tertiary\"\n                    onClick={onClose}\n                >\n                    {__('Cancel', 'wedocs')}\n                </Button>\n                <Button\n                    variant=\"secondary\"\n                    onClick={onReject}\n                >\n                    {__('Reject & Try Again', 'wedocs')}\n                </Button>\n                <Button\n                    variant=\"primary\"\n                    onClick={onAccept}\n                >\n                    {__('Accept & Insert', 'wedocs')}\n                </Button>\n            </HStack>\n        </VStack>\n    );\n};\n\nexport default AiDocWriterPreview;\n","/**\n * AI Service Utility\n * \n * Centralized service for managing AI provider integrations\n * and API calls across all AI-powered features in weDocs.\n * \n * Available WordPress Filters:\n * \n * @filter wedocs_ai_service_providers\n * Allows customization of AI service provider configurations including models,\n * base URLs, and provider names for the AI service utility.\n * \n * @since 2.0.0\n */\n\nimport { __ } from '@wordpress/i18n';\n\nclass AiService {\n    constructor() {\n        this.providers = {\n            openai: {\n                name: 'OpenAI',\n                baseUrl: 'https://api.openai.com/v1',\n                models: {\n                    'gpt-4': 'GPT-4',\n                    'gpt-4o-mini': 'GPT-4o Mini',\n                    'gpt-3.5-turbo': 'GPT-3.5 Turbo'\n                }\n            },\n            anthropic: {\n                name: 'Anthropic',\n                baseUrl: 'https://api.anthropic.com/v1',\n                models: {\n                    'claude-3-opus-20240229': 'Claude 3 Opus',\n                    'claude-3-sonnet-20240229': 'Claude 3.5 Sonnet',\n                    'claude-3-haiku-20240307': 'Claude 3 Haiku'\n                }\n            },\n            google: {\n                name: 'Google Gemini',\n                baseUrl: 'https://generativelanguage.googleapis.com/v1beta',\n                models: {\n                    'gemini-1.5-pro': 'Gemini 1.5 Pro',\n                    'gemini-1.5-flash': 'Gemini 1.5 Flash',\n                    'gemini-1.0-pro': 'Gemini 1.0 Pro'\n                }\n            },\n            azure: {\n                name: 'Azure OpenAI',\n                baseUrl: null, // Will be set from endpoint\n                models: {\n                    'gpt-4': 'GPT-4',\n                    'gpt-4o-mini': 'GPT-4o Mini',\n                    'gpt-3.5-turbo': 'GPT-3.5 Turbo'\n                }\n            }\n        };\n\n        /**\n         * Filter: wedocs_ai_service_providers\n         * \n         * Allows customization of AI service provider configurations including models,\n         * base URLs, and provider names for the AI service utility.\n         * \n         * @param {Object} providers - The providers configuration object\n         * @param {Object} providers.openai - OpenAI provider configuration\n         * @param {string} providers.openai.name - Provider display name\n         * @param {string} providers.openai.baseUrl - API base URL\n         * @param {Object} providers.openai.models - Available models object (key: model_id, value: display_name)\n         * @param {Object} providers.anthropic - Anthropic provider configuration\n         * @param {Object} providers.google - Google Gemini provider configuration\n         * @param {Object} providers.azure - Azure OpenAI provider configuration\n         * \n         * @example\n         * // Add a new model to OpenAI\n         * wp.hooks.addFilter('wedocs_ai_service_providers', 'my-plugin', function(providers) {\n         *     providers.openai.models['gpt-4-turbo'] = 'GPT-4 Turbo';\n         *     return providers;\n         * });\n         * \n         * @example\n         * // Add a completely new provider\n         * wp.hooks.addFilter('wedocs_ai_service_providers', 'my-plugin', function(providers) {\n         *     providers.custom_provider = {\n         *         name: 'Custom AI Provider',\n         *         baseUrl: 'https://api.custom-provider.com/v1',\n         *         models: {\n         *             'custom-model-1': 'Custom Model 1',\n         *             'custom-model-2': 'Custom Model 2'\n         *         }\n         *     };\n         *     return providers;\n         * });\n         * \n         * @example\n         * // Modify existing provider configuration\n         * wp.hooks.addFilter('wedocs_ai_service_providers', 'my-plugin', function(providers) {\n         *     providers.openai.baseUrl = 'https://custom-openai-proxy.com/v1';\n         *     return providers;\n         * });\n         * \n         * @since 2.0.0\n         */\n        this.providers = wp.hooks.applyFilters('wedocs_ai_service_providers', this.providers);\n    }\n\n    /**\n     * Get AI settings from WordPress\n     */\n    async getAiSettings() {\n        try {\n            const response = await fetch('/wp-json/wp/v2/docs/settings?data=wedocs_settings');\n            const settings = await response.json();\n            return settings?.ai || this.getDefaultAiSettings();\n        } catch (error) {\n            console.error('Failed to fetch AI settings:', error);\n            return this.getDefaultAiSettings();\n        }\n    }\n\n    /**\n     * Get default AI settings structure\n     */\n    getDefaultAiSettings() {\n        return {\n            default_provider: 'openai',\n            providers: {\n                openai: {\n                    api_key: '',\n                    models: ['gpt-4', 'gpt-4o-mini', 'gpt-3.5-turbo'],\n                    selected_model: 'gpt-4'\n                },\n                anthropic: {\n                    api_key: '',\n                    models: ['claude-3-opus-20240229', 'claude-3-sonnet-20240229', 'claude-3-haiku-20240307'],\n                    selected_model: 'claude-3-sonnet-20240229'\n                },\n                google: {\n                    api_key: '',\n                    models: ['gemini-1.5-pro', 'gemini-1.5-flash', 'gemini-1.0-pro'],\n                    selected_model: 'gemini-1.5-pro'\n                },\n                azure: {\n                    api_key: '',\n                    endpoint: '',\n                    models: ['gpt-4', 'gpt-4o-mini', 'gpt-3.5-turbo'],\n                    selected_model: 'gpt-4'\n                }\n            },\n        };\n    }\n\n    /**\n     * Test API connection for a specific provider\n     */\n    async testApiConnection(provider, apiKey, endpoint = null) {\n        try {\n            const providerConfig = this.providers[provider];\n            if (!providerConfig) {\n                throw new Error(__('Invalid provider specified', 'wedocs'));\n            }\n\n            if (!apiKey) {\n                throw new Error(__('API key is required', 'wedocs'));\n            }\n\n            // For Azure, endpoint is required\n            if (provider === 'azure' && !endpoint) {\n                throw new Error(__('Azure endpoint is required', 'wedocs'));\n            }\n\n            const testPayload = this.getTestPayload(provider);\n            const response = await this.makeApiCall(provider, apiKey, endpoint, testPayload);\n\n            return {\n                success: true,\n                message: __('API connection successful', 'wedocs'),\n                response: response\n            };\n        } catch (error) {\n            return {\n                success: false,\n                message: error.message || __('API connection failed', 'wedocs'),\n                error: error\n            };\n        }\n    }\n\n    /**\n     * Generate content using AI\n     */\n    async generateContent(prompt, options = {}) {\n        try {\n            const aiSettings = await this.getAiSettings();\n            const { \n                provider = aiSettings.default_provider,\n                model = null,\n                feature = 'ai_doc_writer'\n            } = options;\n\n            // Get provider and model configuration\n            const providerConfig = aiSettings.providers[provider];\n            if (!providerConfig || !providerConfig.api_key) {\n                throw new Error(__('AI provider not configured or API key missing', 'wedocs'));\n            }\n\n            const selectedModel = model || providerConfig.selected_model;\n            const endpoint = provider === 'azure' ? providerConfig.endpoint : null;\n\n            // Prepare the request payload\n            const payload = this.preparePayload(provider, selectedModel, prompt, options);\n\n            // Make the API call\n            const response = await this.makeApiCall(\n                provider, \n                providerConfig.api_key, \n                endpoint, \n                payload\n            );\n\n            return this.parseResponse(provider, response);\n        } catch (error) {\n            console.error('AI content generation failed:', error);\n            throw error;\n        }\n    }\n\n    /**\n     * Get test payload for API connection testing\n     */\n    getTestPayload(provider) {\n        const testPrompts = {\n            openai: {\n                model: 'gpt-3.5-turbo',\n                messages: [{ role: 'user', content: 'Hello' }],\n                max_tokens: 10\n            },\n            anthropic: {\n                model: 'claude-3-haiku-20240307',\n                max_tokens: 10,\n                messages: [{ role: 'user', content: 'Hello' }]\n            },\n            google: {\n                contents: [{\n                    parts: [{ text: 'Hello' }]\n                }]\n            },\n            azure: {\n                model: 'gpt-3.5-turbo',\n                messages: [{ role: 'user', content: 'Hello' }],\n                max_tokens: 10\n            }\n        };\n\n        return testPrompts[provider] || testPrompts.openai;\n    }\n\n    /**\n     * Prepare payload for content generation\n     */\n    preparePayload(provider, model, prompt, options = {}) {\n        const basePayloads = {\n            openai: {\n                model: model,\n                messages: [\n                    {\n                        role: 'system',\n                        content: options.systemPrompt || __('You are a helpful documentation assistant.', 'wedocs')\n                    },\n                    {\n                        role: 'user',\n                        content: prompt\n                    }\n                ],\n                max_tokens: options.maxTokens || 2000,\n                temperature: options.temperature || 0.7\n            },\n            anthropic: {\n                model: model,\n                max_tokens: options.maxTokens || 2000,\n                messages: [\n                    {\n                        role: 'user',\n                        content: `${options.systemPrompt || __('You are a helpful documentation assistant.', 'wedocs')}\\n\\n${prompt}`\n                    }\n                ]\n            },\n            google: {\n                contents: [{\n                    parts: [{\n                        text: `${options.systemPrompt || __('You are a helpful documentation assistant.', 'wedocs')}\\n\\n${prompt}`\n                    }]\n                }],\n                generationConfig: {\n                    maxOutputTokens: options.maxTokens || 2000,\n                    temperature: options.temperature || 0.7\n                }\n            },\n            azure: {\n                model: model,\n                messages: [\n                    {\n                        role: 'system',\n                        content: options.systemPrompt || __('You are a helpful documentation assistant.', 'wedocs')\n                    },\n                    {\n                        role: 'user',\n                        content: prompt\n                    }\n                ],\n                max_tokens: options.maxTokens || 2000,\n                temperature: options.temperature || 0.7\n            }\n        };\n\n        return basePayloads[provider] || basePayloads.openai;\n    }\n\n    /**\n     * Make API call to the specified provider\n     */\n    async makeApiCall(provider, apiKey, endpoint, payload) {\n        const providerConfig = this.providers[provider];\n        let url, headers;\n\n        // Prepare URL and headers based on provider\n        switch (provider) {\n            case 'openai':\n                url = `${providerConfig.baseUrl}/chat/completions`;\n                headers = {\n                    'Authorization': `Bearer ${apiKey}`,\n                    'Content-Type': 'application/json'\n                };\n                break;\n\n            case 'anthropic':\n                url = `${providerConfig.baseUrl}/messages`;\n                headers = {\n                    'x-api-key': apiKey,\n                    'Content-Type': 'application/json',\n                    'anthropic-version': '2023-06-01'\n                };\n                break;\n\n            case 'google':\n                url = `${providerConfig.baseUrl}/models/${payload.model || 'gemini-1.5-pro'}:generateContent?key=${apiKey}`;\n                headers = {\n                    'Content-Type': 'application/json'\n                };\n                break;\n\n            case 'azure':\n                url = `${endpoint}/openai/deployments/${payload.model}/chat/completions?api-version=2023-12-01-preview`;\n                headers = {\n                    'api-key': apiKey,\n                    'Content-Type': 'application/json'\n                };\n                break;\n\n            default:\n                throw new Error(__('Unsupported AI provider', 'wedocs'));\n        }\n\n        const response = await fetch(url, {\n            method: 'POST',\n            headers: headers,\n            body: JSON.stringify(payload)\n        });\n\n        if (!response.ok) {\n            const errorData = await response.json().catch(() => ({}));\n            throw new Error(\n                errorData.error?.message || \n                errorData.message || \n                __('API request failed', 'wedocs')\n            );\n        }\n\n        return await response.json();\n    }\n\n    /**\n     * Parse response from different providers\n     */\n    parseResponse(provider, response) {\n        switch (provider) {\n            case 'openai':\n            case 'azure':\n                return {\n                    content: response.choices?.[0]?.message?.content || '',\n                    usage: response.usage || null\n                };\n\n            case 'anthropic':\n                return {\n                    content: response.content?.[0]?.text || '',\n                    usage: response.usage || null\n                };\n\n            case 'google':\n                return {\n                    content: response.candidates?.[0]?.content?.parts?.[0]?.text || '',\n                    usage: response.usageMetadata || null\n                };\n\n            default:\n                return {\n                    content: '',\n                    usage: null\n                };\n        }\n    }\n\n    /**\n     * Get available models for a provider\n     */\n    getProviderModels(provider) {\n        return this.providers[provider]?.models || {};\n    }\n\n    /**\n     * Validate AI settings\n     */\n    validateAiSettings(settings) {\n        const errors = [];\n\n        if (!settings.default_provider) {\n            errors.push(__('Default provider is required', 'wedocs'));\n        }\n\n        if (!this.providers[settings.default_provider]) {\n            errors.push(__('Invalid default provider', 'wedocs'));\n        }\n\n        // Validate provider configurations\n        Object.entries(settings.providers || {}).forEach(([providerKey, config]) => {\n            if (config.api_key && !this.providers[providerKey]) {\n                errors.push(`${providerKey}: ${__('Invalid provider', 'wedocs')}`);\n            }\n\n            if (providerKey === 'azure' && config.api_key && !config.endpoint) {\n                errors.push(`${providerKey}: ${__('Endpoint is required for Azure OpenAI', 'wedocs')}`);\n            }\n        });\n\n        return {\n            isValid: errors.length === 0,\n            errors: errors\n        };\n    }\n}\n\n// Create and export a singleton instance\nconst aiService = new AiService();\nexport default aiService;\n","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"editor\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"plugins\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"names":["__","useState","registerPlugin","PluginSidebar","useSelect","store","editorStore","coreStore","AiDocWriterModal","AiDocWriter","isModalOpen","setIsModalOpen","isViewable","postTypeName","select","postType","getCurrentPostType","postTypeObject","getPostType","viewable","console","log","createElement","Fragment","name","title","icon","style","padding","marginBottom","fontSize","color","onClick","className","width","height","fontWeight","isOpen","onClose","render","useEffect","Modal","Button","TextControl","TextareaControl","ToggleControl","Notice","Spinner","PanelBody","PanelRow","Card","CardBody","CardHeader","Flex","FlexItem","__experimentalHStack","HStack","__experimentalVStack","VStack","AiDocWriterPreview","aiService","setTitle","prompt","setPrompt","keywords","setKeywords","overwriteContent","setOverwriteContent","isGenerating","setIsGenerating","generatedContent","setGeneratedContent","showPreview","setShowPreview","error","setError","currentPost","getCurrentPost","getEditedPostContent","post","content","raw","rendered","generateDynamicPrompt","docTitle","docKeywords","dynamicPrompt","replace","validateGeneratedContent","errors","trim","length","push","isValid","hasParagraphs","test","hasHeadings","dangerousPatterns","pattern","textContent","handleGenerate","aiSettings","getAiSettings","providers","default_provider","api_key","warn","mockContent","substring","validation","join","systemPrompt","result","generateContent","provider","model","selected_model","feature","maxTokens","temperature","Error","err","message","handleAccept","handleReject","handleClose","onRequestClose","size","spacing","label","value","onChange","placeholder","help","__nextHasNoMarginBottom","rows","checked","status","isDismissible","justify","variant","disabled","onAccept","onReject","dangerouslySetInnerHTML","__html","border","borderRadius","backgroundColor","maxHeight","overflowY","AiService","constructor","openai","baseUrl","models","anthropic","google","azure","wp","hooks","applyFilters","response","fetch","settings","json","ai","getDefaultAiSettings","endpoint","testApiConnection","apiKey","providerConfig","testPayload","getTestPayload","makeApiCall","success","options","selectedModel","payload","preparePayload","parseResponse","testPrompts","messages","role","max_tokens","contents","parts","text","basePayloads","generationConfig","maxOutputTokens","url","headers","method","body","JSON","stringify","ok","errorData","catch","choices","usage","candidates","usageMetadata","getProviderModels","validateAiSettings","Object","entries","forEach","providerKey","config"],"sourceRoot":""}