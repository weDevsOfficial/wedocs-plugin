{"version":3,"file":"editor.js","mappings":"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","sources":["webpack://weDocs/./src/editor/AiDocWriter.js","webpack://weDocs/./src/editor/AiDocWriterModal.js","webpack://weDocs/./src/editor/AiDocWriterPreview.js","webpack://weDocs/./src/utils/aiService.js","webpack://weDocs/external window \"React\"","webpack://weDocs/external window [\"wp\",\"blockEditor\"]","webpack://weDocs/external window [\"wp\",\"blocks\"]","webpack://weDocs/external window [\"wp\",\"components\"]","webpack://weDocs/external window [\"wp\",\"coreData\"]","webpack://weDocs/external window [\"wp\",\"data\"]","webpack://weDocs/external window [\"wp\",\"editor\"]","webpack://weDocs/external window [\"wp\",\"element\"]","webpack://weDocs/external window [\"wp\",\"i18n\"]","webpack://weDocs/external window [\"wp\",\"plugins\"]","webpack://weDocs/webpack/bootstrap","webpack://weDocs/webpack/runtime/compat get default export","webpack://weDocs/webpack/runtime/define property getters","webpack://weDocs/webpack/runtime/hasOwnProperty shorthand","webpack://weDocs/webpack/runtime/make namespace object"],"sourcesContent":["import { __ } from '@wordpress/i18n';\nimport { useState } from '@wordpress/element';\nimport { registerPlugin } from '@wordpress/plugins';\nimport { PluginSidebar } from '@wordpress/editor';\nimport { useSelect } from '@wordpress/data';\nimport { store as editorStore } from '@wordpress/editor';\nimport { store as coreStore } from '@wordpress/core-data';\nimport AiDocWriterModal from './AiDocWriterModal';\n\nconst AiDocWriter = () => {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    // Check if we're in the docs post type\n    const { isViewable, postTypeName } = useSelect((select) => {\n        const postType = select(editorStore).getCurrentPostType();\n        const postTypeObject = select(coreStore).getPostType(postType);\n        return {\n            isViewable: postTypeObject?.viewable,\n            postTypeName: postType,\n        };\n    }, []);\n\n    // Only show for docs post type\n    if (!isViewable || postTypeName !== 'docs') {\n        return null;\n    }\n\n\n    return (\n        <>\n            <PluginSidebar\n                name=\"wedocs-ai-doc-writer\"\n                title={__('AI Doc Writer', 'wedocs')}\n                icon=\"edit\"\n            >\n                <div style={{ padding: '16px' }}>\n                    <p style={{ marginBottom: '16px', fontSize: '14px', color: '#666' }}>\n                        {__('Generate AI-powered documentation content with advanced language models.', 'wedocs')}\n                    </p>\n                    \n                    <button\n                        onClick={() => setIsModalOpen(true)}\n                        className=\"button button-primary\"\n                        style={{ \n                            width: '100%',\n                            height: '40px',\n                            fontSize: '14px',\n                            fontWeight: '500'\n                        }}\n                    >\n                        {__('Open AI Doc Writer', 'wedocs')}\n                    </button>\n                </div>\n            </PluginSidebar>\n\n            {isModalOpen && (\n                <AiDocWriterModal\n                    isOpen={isModalOpen}\n                    onClose={() => setIsModalOpen(false)}\n                />\n            )}\n        </>\n    );\n};\n\n// Register the plugin\nregisterPlugin('wedocs-ai-doc-writer', {\n    render: AiDocWriter,\n    icon: 'edit',\n});","import { __ } from '@wordpress/i18n';\nimport { useState, useEffect } from '@wordpress/element';\nimport {\n    Modal,\n    Button,\n    TextControl,\n    TextareaControl,\n    ToggleControl,\n    Notice,\n    Spinner,\n    PanelBody,\n    PanelRow,\n    Card,\n    CardBody,\n    CardHeader,\n    Flex,\n    FlexItem,\n    __experimentalHStack as HStack,\n    __experimentalVStack as VStack,\n} from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as editorStore } from '@wordpress/editor';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { createBlock } from '@wordpress/blocks';\nimport AiDocWriterPreview from './AiDocWriterPreview';\nimport aiService from '../utils/aiService';\n\nconst AiDocWriterModal = ({ isOpen, onClose }) => {\n    const [title, setTitle] = useState('');\n    const [prompt, setPrompt] = useState('');\n    const [keywords, setKeywords] = useState('');\n    const [overwriteContent, setOverwriteContent] = useState(false);\n    const [isGenerating, setIsGenerating] = useState(false);\n    const [generatedContent, setGeneratedContent] = useState('');\n    const [showPreview, setShowPreview] = useState(false);\n    const [error, setError] = useState('');\n\n    // WordPress editor dispatch hooks\n    const { insertBlocks, replaceBlocks, insertDefaultBlock } = useDispatch(blockEditorStore);\n    const { editPost } = useDispatch(editorStore);\n\n    // Get current post data and editor state\n    const { currentPost, selectedBlockId, blocks } = useSelect((select) => {\n        const { getCurrentPost, getEditedPostContent } = select('core/editor');\n        const { getSelectedBlockClientId, getBlocks } = select('core/block-editor');\n        const post = getCurrentPost();\n        const content = getEditedPostContent();\n        \n        console.log('Post from getCurrentPost:', post);\n        console.log('Content from getEditedPostContent:', content);\n        \n        return {\n            currentPost: {\n                id: post?.id || null,\n                title: post?.title || '',\n                contentRaw: content || '',\n                contentRendered: content || ''\n            },\n            selectedBlockId: getSelectedBlockClientId() || null,\n            blocks: getBlocks() || []\n        };\n    }, []);\n\n    // Pre-fill title with current post title\n    useEffect(() => {\n        if (currentPost?.title && !title) {\n            setTitle(currentPost.title);\n        }\n    }, [currentPost, title]);\n\n    // Generate dynamic prompt from title and keywords\n    const generateDynamicPrompt = (docTitle, docKeywords) => {\n        if (!docTitle && !docKeywords) {\n            return __(\n                \"Generate documentation using HTML heading tags for the title. Include details on {Documentation Keywords} and wrap all content in <p> tags. Highlight headings and keywords with <span class='highlight'>.\",\n                'wedocs'\n            );\n        }\n\n        let dynamicPrompt = __(\n            \"Generate documentation using HTML heading tags for '{title}'. Include relevant details on {keywords} in the documentation. Wrap all content in <p> tags. Highlight headings and keywords with <span class='highlight'>.\",\n            'wedocs'\n        );\n\n        // Replace placeholders with actual values\n        if (docTitle) {\n            dynamicPrompt = dynamicPrompt.replace('{title}', docTitle);\n        } else {\n            dynamicPrompt = dynamicPrompt.replace(\"for '{title}'\", 'for the title');\n        }\n\n        if (docKeywords) {\n            dynamicPrompt = dynamicPrompt.replace('{keywords}', docKeywords);\n        } else {\n            dynamicPrompt = dynamicPrompt.replace('Include relevant details on {keywords} in the documentation.', 'Include relevant details in the documentation.');\n        }\n\n        return dynamicPrompt;\n    };\n\n    // Update prompt when title or keywords change\n    useEffect(() => {\n        const dynamicPrompt = generateDynamicPrompt(title, keywords);\n        setPrompt(dynamicPrompt);\n    }, [title, keywords]);\n\n    // Clean AI-generated content\n    const cleanGeneratedContent = (content) => {\n        if (!content) return content;\n        \n        // Remove HTML document structure\n        let cleaned = content\n            .replace(/```html\\s*/gi, '') // Remove markdown code blocks\n            .replace(/```\\s*/g, '') // Remove closing code blocks\n            .replace(/<!DOCTYPE[^>]*>/gi, '') // Remove DOCTYPE\n            .replace(/<html[^>]*>/gi, '') // Remove html tag\n            .replace(/<\\/html>/gi, '') // Remove closing html tag\n            .replace(/<head[^>]*>[\\s\\S]*?<\\/head>/gi, '') // Remove head section\n            .replace(/<body[^>]*>/gi, '') // Remove body opening tag\n            .replace(/<\\/body>/gi, '') // Remove body closing tag\n            .replace(/<style[^>]*>[\\s\\S]*?<\\/style>/gi, '') // Remove style blocks\n            .replace(/<title[^>]*>[\\s\\S]*?<\\/title>/gi, '') // Remove title\n            .replace(/<meta[^>]*>/gi, '') // Remove meta tags\n            .trim();\n        \n        return cleaned;\n    };\n\n    // Validate AI-generated content\n    const validateGeneratedContent = (content) => {\n        const errors = [];\n\n        // Check if content is empty\n        if (!content || content.trim().length === 0) {\n            errors.push(__('Generated content is empty.', 'wedocs'));\n            return { isValid: false, errors };\n        }\n\n        // Check for basic HTML structure\n        const hasParagraphs = /<p[^>]*>.*?<\\/p>/i.test(content);\n        const hasHeadings = /<h[1-6][^>]*>.*?<\\/h[1-6]>/i.test(content);\n\n        if (!hasParagraphs && !hasHeadings) {\n            errors.push(__('Generated content should contain at least paragraphs or headings.', 'wedocs'));\n        }\n\n        console.log(content);\n\n        // Check for potentially dangerous HTML (basic XSS prevention)\n        const dangerousPatterns = [\n            /<script[^>]*>.*?<\\/script>/gi,\n            /<iframe[^>]*>.*?<\\/iframe>/gi,\n            /javascript:/gi,\n            /on\\w+\\s*=/gi\n        ];\n\n        for (const pattern of dangerousPatterns) {\n            if (pattern.test(content)) {\n                errors.push(__('Generated content contains potentially unsafe HTML elements.', 'wedocs'));\n                break;\n            }\n        }\n\n        // Check for minimum content length\n        const textContent = content.replace(/<[^>]*>/g, '').trim();\n        if (textContent.length < 50) {\n            errors.push(__('Generated content is too short. Please try again with more specific keywords.', 'wedocs'));\n        }\n\n        // Check for maximum content length (prevent extremely long content)\n        if (textContent.length > 10000) {\n            errors.push(__('Generated content is too long. Please try again with more focused keywords.', 'wedocs'));\n        }\n\n        return {\n            isValid: errors.length === 0,\n            errors\n        };\n    };\n\n\n    const handleGenerate = async () => {\n        if (!title.trim()) {\n            setError(__('Please enter a documentation title.', 'wedocs'));\n            return;\n        }\n\n        if (!keywords.trim()) {\n            setError(__('Please enter keywords to guide the AI.', 'wedocs'));\n            return;\n        }\n\n        setError('');\n        setIsGenerating(true);\n\n        try {\n            // Get AI settings to determine provider and model\n            const aiSettings = await aiService.getAiSettings();\n\n            // Check if AI is properly configured\n            if (!aiSettings.providers[aiSettings.default_provider]?.api_key) {\n                setError(__('AI service is not configured. Please set up your AI provider settings in weDocs > Settings > AI Control Settings.', 'wedocs'));\n                return;\n            }\n\n            // Use AI service to generate content\n            const systemPrompt = __(\n                'You are a professional documentation writer. Generate comprehensive, well-structured documentation content using HTML tags. Use proper heading hierarchy (h2, h3, etc.) and wrap all content in paragraph tags. Highlight important terms with <span class=\"highlight\"> tags. IMPORTANT: Only return the content body without HTML document structure (no <!DOCTYPE>, <html>, <head>, <style>, or <body> tags). Return only the content that should be inserted into the document.',\n                'wedocs'\n            );\n\n            const selectedModel = aiSettings.providers[aiSettings.default_provider].selected_model;\n\n                const result = await aiService.generateContent(prompt, {\n                    provider: aiSettings.default_provider,\n                    model: selectedModel,\n                    feature: 'ai_doc_writer',\n                    systemPrompt: systemPrompt,\n                    maxTokens: 2000,\n                    temperature: 0.7\n                });\n\n\n                if (!result.content) {\n                    throw new Error(__('AI service returned empty content', 'wedocs'));\n                }\n\n                // Clean the generated content\n                const cleanedContent = cleanGeneratedContent(result.content);\n\n            // Validate the generated content\n            const validation = validateGeneratedContent(cleanedContent);\n\n            if (!validation.isValid) {\n                setError(validation.errors.join(' '));\n                return;\n            }\n\n            setGeneratedContent(cleanedContent);\n            setShowPreview(true);\n        } catch (err) {\n            setError(err.message || __('Failed to generate content. Please try again.', 'wedocs'));\n        } finally {\n            setIsGenerating(false);\n        }\n    };\n\n    // Sanitize content for security (following BetterDocs Pro pattern)\n    const sanitizeContent = (content) => {\n        if (!content) return content;\n        \n        // Remove script tags and their contents\n        content = content.replace(/<script[^>]*>.*?<\\/script>/gi, '');\n        \n        // Remove javascript: protocols but keep the anchor tags\n        content = content.replace(/href\\s*=\\s*([\"\\'])\\s*javascript:.*?\\1/i, 'href=\"#\"');\n        \n        // Remove all event handlers (onclick, onload, etc) but keep the elements\n        content = content.replace(/\\s+on\\w+\\s*=\\s*([\"\\'])?[^\"\\']*\\1?/i, '');\n        \n        // Remove any inline javascript: in attributes\n        content = content.replace(/javascript\\s*:/i, '');\n        \n        return content;\n    };\n\n    // Parse HTML content and create appropriate blocks\n    const createContentBlocks = (htmlContent) => {\n        const blocks = [];\n        \n        // Sanitize the content first\n        const sanitizedContent = sanitizeContent(htmlContent);\n        \n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = sanitizedContent;\n        \n        // Process each top-level element\n        Array.from(tempDiv.children).forEach(element => {\n            const tagName = element.tagName.toLowerCase();\n            \n            switch (tagName) {\n                case 'h1':\n                case 'h2':\n                case 'h3':\n                case 'h4':\n                case 'h5':\n                case 'h6':\n                    const level = parseInt(tagName.charAt(1));\n                    blocks.push(createBlock('core/heading', {\n                        content: element.innerHTML,\n                        level: level\n                    }));\n                    break;\n                    \n                case 'p':\n                    blocks.push(createBlock('core/paragraph', {\n                        content: element.innerHTML\n                    }));\n                    break;\n                    \n                case 'ul':\n                case 'ol':\n                    const listType = tagName === 'ul' ? 'ul' : 'ol';\n                    const listItems = Array.from(element.querySelectorAll('li')).map(li => li.innerHTML);\n                    blocks.push(createBlock('core/list', {\n                        values: listItems,\n                        ordered: listType === 'ol'\n                    }));\n                    break;\n                    \n                case 'blockquote':\n                    blocks.push(createBlock('core/quote', {\n                        value: element.innerHTML\n                    }));\n                    break;\n                    \n                default:\n                    // For any other HTML content, use HTML block\n                    blocks.push(createBlock('core/html', {\n                        content: element.outerHTML\n                    }));\n                    break;\n            }\n        });\n        \n        // If no blocks were created (e.g., only text), create a paragraph\n        if (blocks.length === 0) {\n            blocks.push(createBlock('core/paragraph', {\n                content: htmlContent\n            }));\n        }\n        \n        return blocks;\n    };\n\n    const handleAccept = () => {\n        try {\n            // Create blocks from the generated content\n            const contentBlocks = createContentBlocks(generatedContent);\n\n            if (overwriteContent) {\n                // Overwrite Mode: Replace entire post content\n                // Get all block client IDs safely\n                const blockIds = blocks.map(block => block.clientId).filter(id => id);\n                \n                if (blockIds.length > 0) {\n                    // Replace all existing blocks with new content blocks\n                    replaceBlocks(blockIds, contentBlocks);\n                } else {\n                    // If no blocks exist, just insert the new blocks\n                    insertBlocks(contentBlocks);\n                }\n            } else {\n                // Insert Mode: Insert at current cursor position\n                if (selectedBlockId) {\n                    // Insert after the selected block\n                    insertBlocks(contentBlocks, selectedBlockId, 'after');\n                } else {\n                    // No block selected, insert at the end\n                    insertBlocks(contentBlocks);\n                }\n            }\n            \n            // Close the modal\n            onClose();\n            \n        } catch (error) {\n            setError(__('Failed to insert content. Please try again.', 'wedocs'));\n        }\n    };\n\n    const handleReject = () => {\n        setShowPreview(false);\n        setGeneratedContent('');\n    };\n\n    const handleClose = () => {\n        setShowPreview(false);\n        setGeneratedContent('');\n        setError('');\n        onClose();\n    };\n\n    return (\n        <Modal\n            title={__('AI Doc Writer', 'wedocs')}\n            onRequestClose={handleClose}\n            className=\"wedocs-ai-doc-writer-modal\"\n            size=\"large\"\n        >\n            {!showPreview ? (\n                <VStack spacing={4}>\n                    <Card>\n                        <CardBody>\n                            <VStack spacing={3}>\n                                <TextControl\n                                    label={__('Documentation Title', 'wedocs')}\n                                    value={title}\n                                    onChange={setTitle}\n                                    placeholder={__('Enter your documentation title here...', 'wedocs')}\n                                    help={__('The title will be used to generate relevant content.', 'wedocs')}\n                                    __nextHasNoMarginBottom\n                                    __next40pxDefaultSize\n                                />\n\n                                <TextControl\n                                    label={__('Keywords', 'wedocs')}\n                                    value={keywords}\n                                    onChange={setKeywords}\n                                    placeholder={__('Add keywords to guide AI (comma-separated)...', 'wedocs')}\n                                    help={__('Enter relevant keywords separated by commas.', 'wedocs')}\n                                    __nextHasNoMarginBottom\n                                    __next40pxDefaultSize\n                                />\n\n                                <TextareaControl\n                                    label={__('AI Instructions', 'wedocs')}\n                                    value={prompt}\n                                    onChange={setPrompt}\n                                    rows={4}\n                                    placeholder={__('AI instructions will be auto-generated from title and keywords...', 'wedocs')}\n                                    help={__('Instructions are automatically generated from your title and keywords. You can edit them manually if needed.', 'wedocs')}\n                                    __nextHasNoMarginBottom\n                                />\n\n                                <ToggleControl\n                                    label={__('Overwrite your existing Doc', 'wedocs')}\n                                    checked={overwriteContent}\n                                    onChange={setOverwriteContent}\n                                    help={__('When enabled, AI content will replace the entire document. When disabled, content will be inserted at the current cursor position.', 'wedocs')}\n                                    __nextHasNoMarginBottom\n                                />\n                            </VStack>\n                        </CardBody>\n                    </Card>\n\n                    {error && (\n                        <Notice status=\"error\" isDismissible={false}>\n                            {error}\n                        </Notice>\n                    )}\n\n                    <HStack justify=\"flex-end\" spacing={2}>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            {__('Cancel', 'wedocs')}\n                        </Button>\n                        <Button\n                            variant=\"primary\"\n                            onClick={handleGenerate}\n                            disabled={isGenerating}\n                        >\n                            {isGenerating ? (\n                                <>\n                                    <Spinner />\n                                    {__('Generating...', 'wedocs')}\n                                </>\n                            ) : (\n                                __('Generate Content', 'wedocs')\n                            )}\n                        </Button>\n                    </HStack>\n                </VStack>\n            ) : (\n                <AiDocWriterPreview\n                    content={generatedContent}\n                    onAccept={handleAccept}\n                    onReject={handleReject}\n                    onClose={handleClose}\n                />\n            )}\n        </Modal>\n    );\n};\n\nexport default AiDocWriterModal;\n","import { __ } from '@wordpress/i18n';\nimport { Button, Notice, Card, CardBody, CardHeader, __experimentalHStack as HStack, __experimentalVStack as VStack } from '@wordpress/components';\n\nconst AiDocWriterPreview = ({ content, onAccept, onReject, onClose }) => {\n    return (\n        <VStack spacing={4}>\n            <Card>\n                <CardBody>\n                    <div \n                        dangerouslySetInnerHTML={{ __html: content }}\n                        style={{\n                            border: '1px solid #ddd',\n                            padding: '16px',\n                            borderRadius: '4px',\n                            backgroundColor: '#f9f9f9',\n                            maxHeight: '400px',\n                            overflowY: 'auto'\n                        }}\n                    />\n                </CardBody>\n            </Card>\n\n            <Notice status=\"info\" isDismissible={false}>\n                {__(\n                    'The content above is formatted with HTML tags. When inserted, it will be properly formatted in your document.',\n                    'wedocs'\n                )}\n            </Notice>\n\n            <HStack justify=\"flex-end\" spacing={2}>\n                <Button\n                    variant=\"tertiary\"\n                    onClick={onClose}\n                >\n                    {__('Cancel', 'wedocs')}\n                </Button>\n                <Button\n                    variant=\"secondary\"\n                    onClick={onReject}\n                >\n                    {__('Reject & Try Again', 'wedocs')}\n                </Button>\n                <Button\n                    variant=\"primary\"\n                    onClick={onAccept}\n                >\n                    {__('Accept & Insert', 'wedocs')}\n                </Button>\n            </HStack>\n        </VStack>\n    );\n};\n\nexport default AiDocWriterPreview;\n","/**\n * AI Service Utility\n *\n * Centralized service for managing AI provider integrations\n * and API calls across all AI-powered features in weDocs.\n *\n * Available WordPress Filters:\n *\n * @filter wedocs_ai_service_providers\n * Allows customization of AI service provider configurations including models,\n * base URLs, and provider names for the AI service utility.\n *\n * @since 2.0.0\n */\n\nimport { __ } from '@wordpress/i18n';\n\nclass AiService {\n    constructor() {\n        // Use centralized provider configs from WordPress\n        this.providers = window.weDocsEditorVars?.aiProviderConfigs || {};\n\n        /**\n         * Filter: wedocs_ai_service_providers\n         *\n         * Allows customization of AI service provider configurations including models,\n         * base URLs, and provider names for the AI service utility.\n         *\n         * @param {Object} providers - The providers configuration object\n         * @param {Object} providers.openai - OpenAI provider configuration\n         * @param {string} providers.openai.name - Provider display name\n         * @param {string} providers.openai.baseUrl - API base URL\n         * @param {Object} providers.openai.models - Available models object (key: model_id, value: display_name)\n         * @param {Object} providers.anthropic - Anthropic provider configuration\n         * @param {Object} providers.google - Google Gemini provider configuration\n         * @param {Object} providers.azure - Azure OpenAI provider configuration\n         *\n         * @example\n         * // Add a new model to OpenAI\n         * wp.hooks.addFilter('wedocs_ai_service_providers', 'my-plugin', function(providers) {\n         *     providers.openai.models['gpt-4-turbo'] = 'GPT-4 Turbo';\n         *     return providers;\n         * });\n         *\n         * @example\n         * // Add a completely new provider\n         * wp.hooks.addFilter('wedocs_ai_service_providers', 'my-plugin', function(providers) {\n         *     providers.custom_provider = {\n         *         name: 'Custom AI Provider',\n         *         baseUrl: 'https://api.custom-provider.com/v1',\n         *         models: {\n         *             'custom-model-1': 'Custom Model 1',\n         *             'custom-model-2': 'Custom Model 2'\n         *         }\n         *     };\n         *     return providers;\n         * });\n         *\n         * @example\n         * // Modify existing provider configuration\n         * wp.hooks.addFilter('wedocs_ai_service_providers', 'my-plugin', function(providers) {\n         *     providers.openai.baseUrl = 'https://custom-openai-proxy.com/v1';\n         *     return providers;\n         * });\n         *\n         * @since 2.0.0\n         */\n        this.providers = wp.hooks.applyFilters('wedocs_ai_service_providers', this.providers);\n    }\n\n    /**\n     * Get AI settings from WordPress\n     */\n    async getAiSettings() {\n        try {\n            const response = await fetch('/wp-json/wp/v2/docs/settings?data=wedocs_settings');\n            const settings = await response.json();\n            return settings?.ai || this.getDefaultAiSettings();\n        } catch (error) {\n            console.error('Failed to fetch AI settings:', error);\n            return this.getDefaultAiSettings();\n        }\n    }\n\n    /**\n     * Get default AI settings structure\n     */\n    getDefaultAiSettings() {\n        const providers = {};\n\n        // Generate settings from centralized configs\n        Object.keys(this.providers).forEach(providerKey => {\n            const provider = this.providers[providerKey];\n            const modelKeys = Object.keys(provider.models);\n            const firstModel = modelKeys[0]; // Use first model as default\n\n            providers[providerKey] = {\n                api_key: '',\n                models: modelKeys,\n                selected_model: firstModel\n            };\n\n            // Add endpoint for Azure if it exists\n            if (providerKey === 'azure') {\n                providers[providerKey].endpoint = '';\n            }\n        });\n\n        return {\n            default_provider: 'openai',\n            providers: providers\n        };\n    }\n\n    /**\n     * Test API connection for a specific provider\n     */\n    async testApiConnection(provider, apiKey, endpoint = null) {\n        try {\n            const providerConfig = this.providers[provider];\n            if (!providerConfig) {\n                throw new Error(__('Invalid provider specified', 'wedocs'));\n            }\n\n            if (!apiKey) {\n                throw new Error(__('API key is required', 'wedocs'));\n            }\n\n            // For Azure, endpoint is required\n            if (provider === 'azure' && !endpoint) {\n                throw new Error(__('Azure endpoint is required', 'wedocs'));\n            }\n\n            const testPayload = this.getTestPayload(provider);\n            const response = await this.makeApiCall(provider, apiKey, endpoint, testPayload);\n\n            return {\n                success: true,\n                message: __('API connection successful', 'wedocs'),\n                response: response\n            };\n        } catch (error) {\n            return {\n                success: false,\n                message: error.message || __('API connection failed', 'wedocs'),\n                error: error\n            };\n        }\n    }\n\n    /**\n     * Generate content using AI\n     */\n    async generateContent(prompt, options = {}) {\n        try {\n            const aiSettings = await this.getAiSettings();\n            const {\n                provider = aiSettings.default_provider,\n                model = null,\n                feature = 'ai_doc_writer'\n            } = options;\n\n            console.log('AI Service - generateContent called with:', { prompt: prompt.substring(0, 100) + '...', options });\n\n            // Get provider and model configuration\n            const providerConfig = aiSettings.providers[provider];\n            console.log('AI Service - Provider config:', providerConfig);\n\n            if (!providerConfig || !providerConfig.api_key) {\n                throw new Error(__('AI provider not configured or API key missing', 'wedocs'));\n            }\n\n            const selectedModel = model || providerConfig.selected_model;\n            const endpoint = provider === 'azure' ? providerConfig.endpoint : null;\n\n            console.log('AI Service - Selected model:', selectedModel);\n            console.log('AI Service - Provider:', provider);\n            console.log('AI Service - Endpoint:', endpoint);\n\n            // Prepare the request payload\n            const payload = this.preparePayload(provider, selectedModel, prompt, options);\n\n            // Make the API call\n            const response = await this.makeApiCall(\n                provider,\n                providerConfig.api_key,\n                endpoint,\n                payload,\n                selectedModel\n            );\n\n            return this.parseResponse(provider, response);\n        } catch (error) {\n            console.error('AI content generation failed:', error);\n            throw error;\n        }\n    }\n\n    /**\n     * List available models for Google Gemini API\n     */\n    async listGoogleModels(apiKey) {\n        try {\n            console.log('AI Service - Listing Google models...');\n            const url = `https://generativelanguage.googleapis.com/v1beta/models?key=${apiKey}`;\n\n            const response = await fetch(url, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n\n            if (!response.ok) {\n                const errorData = await response.json().catch(() => ({}));\n                throw new Error(\n                    errorData.error?.message ||\n                    errorData.message ||\n                    __('Failed to list Google models', 'wedocs')\n                );\n            }\n\n            const data = await response.json();\n            console.log('AI Service - Available Google models:', data);\n            return data;\n        } catch (error) {\n            console.error('AI Service - Failed to list Google models:', error);\n            throw error;\n        }\n    }\n\n    /**\n     * Get test payload for API connection testing\n     */\n    getTestPayload(provider) {\n        const testPrompts = {\n            openai: {\n                model: 'gpt-3.5-turbo',\n                messages: [{ role: 'user', content: 'Hello' }],\n                max_tokens: 10\n            },\n            anthropic: {\n                model: 'claude-3-haiku-20240307',\n                max_tokens: 10,\n                messages: [{ role: 'user', content: 'Hello' }]\n            },\n            google: {\n                contents: [{\n                    parts: [{ text: 'Hello' }]\n                }]\n            },\n            azure: {\n                model: 'gpt-3.5-turbo',\n                messages: [{ role: 'user', content: 'Hello' }],\n                max_tokens: 10\n            }\n        };\n\n        return testPrompts[provider] || testPrompts.openai;\n    }\n\n    /**\n     * Prepare payload for content generation\n     */\n    preparePayload(provider, model, prompt, options = {}) {\n        console.log('AI Service - preparePayload called with:', { provider, model, prompt: prompt.substring(0, 100) + '...', options });\n\n        const basePayloads = {\n            openai: {\n                model: model,\n                messages: [\n                    {\n                        role: 'system',\n                        content: options.systemPrompt || __('You are a helpful documentation assistant.', 'wedocs')\n                    },\n                    {\n                        role: 'user',\n                        content: prompt\n                    }\n                ],\n                max_tokens: options.maxTokens || 2000,\n                temperature: options.temperature || 0.7\n            },\n            anthropic: {\n                model: model,\n                max_tokens: options.maxTokens || 2000,\n                messages: [\n                    {\n                        role: 'user',\n                        content: `${options.systemPrompt || __('You are a helpful documentation assistant.', 'wedocs')}\\n\\n${prompt}`\n                    }\n                ]\n            },\n            google: {\n                contents: [{\n                    parts: [{\n                        text: `${options.systemPrompt || __('You are a helpful documentation assistant.', 'wedocs')}\\n\\n${prompt}`\n                    }]\n                }],\n                generationConfig: {\n                    maxOutputTokens: options.maxTokens || 2000,\n                    temperature: options.temperature || 0.7\n                }\n            },\n            azure: {\n                model: model,\n                messages: [\n                    {\n                        role: 'system',\n                        content: options.systemPrompt || __('You are a helpful documentation assistant.', 'wedocs')\n                    },\n                    {\n                        role: 'user',\n                        content: prompt\n                    }\n                ],\n                max_tokens: options.maxTokens || 2000,\n                temperature: options.temperature || 0.7\n            }\n        };\n\n        const finalPayload = basePayloads[provider] || basePayloads.openai;\n        console.log('AI Service - Final payload prepared:', finalPayload);\n\n        return finalPayload;\n    }\n\n    /**\n     * Make API call to the specified provider\n     */\n    async makeApiCall(provider, apiKey, endpoint, payload, model = null) {\n        console.log('AI Service - makeApiCall called with:', { provider, apiKey: apiKey ? '***' + apiKey.slice(-4) : 'none', endpoint, payload, model });\n\n        const providerConfig = this.providers[provider];\n        let url, headers;\n\n        // Prepare URL and headers based on provider\n        switch (provider) {\n            case 'openai':\n                const openaiBaseUrl = providerConfig.endpoint || providerConfig.baseUrl || 'https://api.openai.com/v1';\n                url = `${openaiBaseUrl}/chat/completions`;\n                headers = {\n                    'Authorization': `Bearer ${apiKey}`,\n                    'Content-Type': 'application/json'\n                };\n                break;\n\n            case 'anthropic':\n                const anthropicBaseUrl = providerConfig.endpoint || providerConfig.baseUrl || 'https://api.anthropic.com/v1';\n                url = `${anthropicBaseUrl}/messages`;\n                headers = {\n                    'x-api-key': apiKey,\n                    'Content-Type': 'application/json',\n                    'anthropic-version': '2023-06-01'\n                };\n                break;\n\n            case 'google':\n                // Use endpoint from centralized config and replace {model} placeholder\n                const endpoint = providerConfig.endpoint || 'https://generativelanguage.googleapis.com/v1beta/models/{model}:generateContent';\n                const selectedModel = model || 'gemini-2.0-flash-exp';\n                url = endpoint.replace('{model}', selectedModel) + `?key=${apiKey}`;\n                headers = {\n                    'Content-Type': 'application/json'\n                };\n                break;\n\n            case 'azure':\n                url = `${endpoint}/openai/deployments/${payload.model}/chat/completions?api-version=2023-12-01-preview`;\n                headers = {\n                    'api-key': apiKey,\n                    'Content-Type': 'application/json'\n                };\n                break;\n\n            default:\n                throw new Error(__('Unsupported AI provider', 'wedocs'));\n        }\n        \n        console.log('AI Service - Request headers:', headers);\n        console.log('AI Service - Request payload:', payload);\n        console.log(payload);\n\n        const response = await fetch(url, {\n            method: 'POST',\n            headers: headers,\n            body: JSON.stringify(payload)\n        });\n\n        if (!response.ok) {\n            let errorData = {};\n            let errorMessage = __('API request failed', 'wedocs');\n\n            try {\n                const responseText = await response.text();\n                console.log('AI Service - Error response text:', responseText);\n\n                // Try to parse as JSON\n                if (responseText.trim().startsWith('{')) {\n                    errorData = JSON.parse(responseText);\n                    errorMessage = errorData.error?.message || errorData.message || errorMessage;\n                } else {\n                    // If it's HTML (like a 404 page), provide a more helpful message\n                    errorMessage = `HTTP ${response.status}: ${response.statusText}`;\n                }\n            } catch (parseError) {\n                console.error('AI Service - Failed to parse error response:', parseError);\n                errorMessage = `HTTP ${response.status}: ${response.statusText}`;\n            }\n\n            // If it's a Google model not found error, list available models\n            if (provider === 'google' && errorMessage.includes('is not found for API version')) {\n                console.log('AI Service - Model not found, listing available models...');\n                try {\n                    await this.listGoogleModels(apiKey);\n                } catch (listError) {\n                    console.error('AI Service - Failed to list models:', listError);\n                }\n            }\n\n            throw new Error(errorMessage);\n        }\n\n        return await response.json();\n    }\n\n    /**\n     * Parse response from different providers\n     */\n    parseResponse(provider, response) {\n        switch (provider) {\n            case 'openai':\n            case 'azure':\n                return {\n                    content: response.choices?.[0]?.message?.content || '',\n                    usage: response.usage || null\n                };\n\n            case 'anthropic':\n                return {\n                    content: response.content?.[0]?.text || '',\n                    usage: response.usage || null\n                };\n\n            case 'google':\n                return {\n                    content: response.candidates?.[0]?.content?.parts?.[0]?.text || '',\n                    usage: response.usageMetadata || null\n                };\n\n            default:\n                return {\n                    content: '',\n                    usage: null\n                };\n        }\n    }\n\n    /**\n     * Get available models for a provider\n     */\n    getProviderModels(provider) {\n        return this.providers[provider]?.models || {};\n    }\n\n    /**\n     * Validate AI settings\n     */\n    validateAiSettings(settings) {\n        const errors = [];\n\n        if (!settings.default_provider) {\n            errors.push(__('Default provider is required', 'wedocs'));\n        }\n\n        if (!this.providers[settings.default_provider]) {\n            errors.push(__('Invalid default provider', 'wedocs'));\n        }\n\n        // Validate provider configurations\n        Object.entries(settings.providers || {}).forEach(([providerKey, config]) => {\n            if (config.api_key && !this.providers[providerKey]) {\n                errors.push(`${providerKey}: ${__('Invalid provider', 'wedocs')}`);\n            }\n\n            if (providerKey === 'azure' && config.api_key && !config.endpoint) {\n                errors.push(`${providerKey}: ${__('Endpoint is required for Azure OpenAI', 'wedocs')}`);\n            }\n        });\n\n        return {\n            isValid: errors.length === 0,\n            errors: errors\n        };\n    }\n}\n\n// Create and export a singleton instance\nconst aiService = new AiService();\nexport default aiService;\n","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editor\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"plugins\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"names":["__","useState","registerPlugin","PluginSidebar","useSelect","store","editorStore","coreStore","AiDocWriterModal","AiDocWriter","isModalOpen","setIsModalOpen","isViewable","postTypeName","select","postType","getCurrentPostType","postTypeObject","getPostType","viewable","createElement","Fragment","name","title","icon","style","padding","marginBottom","fontSize","color","onClick","className","width","height","fontWeight","isOpen","onClose","render","useEffect","Modal","Button","TextControl","TextareaControl","ToggleControl","Notice","Spinner","PanelBody","PanelRow","Card","CardBody","CardHeader","Flex","FlexItem","__experimentalHStack","HStack","__experimentalVStack","VStack","useDispatch","blockEditorStore","createBlock","AiDocWriterPreview","aiService","setTitle","prompt","setPrompt","keywords","setKeywords","overwriteContent","setOverwriteContent","isGenerating","setIsGenerating","generatedContent","setGeneratedContent","showPreview","setShowPreview","error","setError","insertBlocks","replaceBlocks","insertDefaultBlock","editPost","currentPost","selectedBlockId","blocks","getCurrentPost","getEditedPostContent","getSelectedBlockClientId","getBlocks","post","content","console","log","id","contentRaw","contentRendered","generateDynamicPrompt","docTitle","docKeywords","dynamicPrompt","replace","cleanGeneratedContent","cleaned","trim","validateGeneratedContent","errors","length","push","isValid","hasParagraphs","test","hasHeadings","dangerousPatterns","pattern","textContent","handleGenerate","aiSettings","getAiSettings","providers","default_provider","api_key","systemPrompt","selectedModel","selected_model","result","generateContent","provider","model","feature","maxTokens","temperature","Error","cleanedContent","validation","join","err","message","sanitizeContent","createContentBlocks","htmlContent","sanitizedContent","tempDiv","document","innerHTML","Array","from","children","forEach","element","tagName","toLowerCase","level","parseInt","charAt","listType","listItems","querySelectorAll","map","li","values","ordered","value","outerHTML","handleAccept","contentBlocks","blockIds","block","clientId","filter","handleReject","handleClose","onRequestClose","size","spacing","label","onChange","placeholder","help","__nextHasNoMarginBottom","__next40pxDefaultSize","rows","checked","status","isDismissible","justify","variant","disabled","onAccept","onReject","dangerouslySetInnerHTML","__html","border","borderRadius","backgroundColor","maxHeight","overflowY","AiService","constructor","window","weDocsEditorVars","aiProviderConfigs","wp","hooks","applyFilters","response","fetch","settings","json","ai","getDefaultAiSettings","Object","keys","providerKey","modelKeys","models","firstModel","endpoint","testApiConnection","apiKey","providerConfig","testPayload","getTestPayload","makeApiCall","success","options","substring","payload","preparePayload","parseResponse","listGoogleModels","url","method","headers","ok","errorData","catch","data","testPrompts","openai","messages","role","max_tokens","anthropic","google","contents","parts","text","azure","basePayloads","generationConfig","maxOutputTokens","finalPayload","slice","openaiBaseUrl","baseUrl","anthropicBaseUrl","body","JSON","stringify","errorMessage","responseText","startsWith","parse","statusText","parseError","includes","listError","choices","usage","candidates","usageMetadata","getProviderModels","validateAiSettings","entries","config"],"sourceRoot":""}