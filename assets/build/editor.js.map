{"version":3,"file":"editor.js","mappings":"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","sources":["webpack://weDocs/./src/editor/AiDocWriter.js","webpack://weDocs/./src/editor/AiDocWriterModal.js","webpack://weDocs/./src/editor/AiDocWriterPreview.js","webpack://weDocs/external window \"React\"","webpack://weDocs/external window [\"wp\",\"components\"]","webpack://weDocs/external window [\"wp\",\"coreData\"]","webpack://weDocs/external window [\"wp\",\"data\"]","webpack://weDocs/external window [\"wp\",\"editPost\"]","webpack://weDocs/external window [\"wp\",\"editor\"]","webpack://weDocs/external window [\"wp\",\"element\"]","webpack://weDocs/external window [\"wp\",\"i18n\"]","webpack://weDocs/external window [\"wp\",\"plugins\"]","webpack://weDocs/webpack/bootstrap","webpack://weDocs/webpack/runtime/compat get default export","webpack://weDocs/webpack/runtime/define property getters","webpack://weDocs/webpack/runtime/hasOwnProperty shorthand","webpack://weDocs/webpack/runtime/make namespace object"],"sourcesContent":["import { __ } from '@wordpress/i18n';\nimport { useState } from '@wordpress/element';\nimport { registerPlugin } from '@wordpress/plugins';\nimport { PluginSidebar } from '@wordpress/edit-post';\nimport { useSelect } from '@wordpress/data';\nimport { store as editorStore } from '@wordpress/editor';\nimport { store as coreStore } from '@wordpress/core-data';\nimport AiDocWriterModal from './AiDocWriterModal';\n\nconst AiDocWriter = () => {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    // Check if we're in the docs post type\n    const { isViewable, postTypeName } = useSelect((select) => {\n        const postType = select(editorStore).getCurrentPostType();\n        const postTypeObject = select(coreStore).getPostType(postType);\n        return {\n            isViewable: postTypeObject?.viewable,\n            postTypeName: postType,\n        };\n    }, []);\n\n    // Only show for docs post type\n    if (!isViewable || postTypeName !== 'docs') {\n        return null;\n    }\n\n    console.log('AiDocWriter component rendered for docs post type, isModalOpen:', isModalOpen);\n\n    return (\n        <>\n            <PluginSidebar\n                name=\"wedocs-ai-doc-writer\"\n                title={__('AI Doc Writer', 'wedocs')}\n                icon=\"edit\"\n            >\n                <div style={{ padding: '16px' }}>\n                    <p style={{ marginBottom: '16px', fontSize: '14px', color: '#666' }}>\n                        {__('Generate AI-powered documentation content with advanced language models.', 'wedocs')}\n                    </p>\n                    \n                    <button\n                        onClick={() => {\n                            console.log('Opening AI Doc Writer modal');\n                            setIsModalOpen(true);\n                        }}\n                        className=\"button button-primary\"\n                        style={{ \n                            width: '100%',\n                            height: '40px',\n                            fontSize: '14px',\n                            fontWeight: '500'\n                        }}\n                    >\n                        {__('Open AI Doc Writer', 'wedocs')}\n                    </button>\n                </div>\n            </PluginSidebar>\n\n            {isModalOpen && (\n                <AiDocWriterModal\n                    isOpen={isModalOpen}\n                    onClose={() => {\n                        console.log('Closing AI Doc Writer modal');\n                        setIsModalOpen(false);\n                    }}\n                />\n            )}\n        </>\n    );\n};\n\n// Register the plugin\nregisterPlugin('wedocs-ai-doc-writer', {\n    render: AiDocWriter,\n    icon: 'edit',\n});","import { __ } from '@wordpress/i18n';\nimport { useState, useEffect } from '@wordpress/element';\nimport {\n    Modal,\n    Button,\n    TextControl,\n    TextareaControl,\n    ToggleControl,\n    Notice,\n    Spinner,\n    PanelBody,\n    PanelRow,\n    Card,\n    CardBody,\n    CardHeader,\n    Flex,\n    FlexItem,\n    __experimentalHStack as HStack,\n    __experimentalVStack as VStack,\n} from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport AiDocWriterPreview from './AiDocWriterPreview';\n\nconst AiDocWriterModal = ({ isOpen, onClose }) => {\n    const [title, setTitle] = useState('');\n    const [prompt, setPrompt] = useState('');\n    const [keywords, setKeywords] = useState('');\n    const [overwriteContent, setOverwriteContent] = useState(false);\n    const [isGenerating, setIsGenerating] = useState(false);\n    const [generatedContent, setGeneratedContent] = useState('');\n    const [showPreview, setShowPreview] = useState(false);\n    const [error, setError] = useState('');\n\n    // Get current post data\n    const currentPost = useSelect((select) => {\n        const { getCurrentPost, getEditedPostContent } = select('core/editor');\n        const post = getCurrentPost();\n        const content = getEditedPostContent();\n        \n        console.log('Post from getCurrentPost:', post);\n        console.log('Content from getEditedPostContent:', content);\n        \n        return {\n            ...post,\n            content: {\n                raw: content,\n                rendered: content\n            }\n        };\n    }, []);\n\n    // Pre-fill title with current post title\n    useEffect(() => {\n        if (currentPost?.title && !title) {\n            setTitle(currentPost.title);\n        }\n    }, [currentPost, title]);\n\n    // Generate dynamic prompt from title and keywords\n    const generateDynamicPrompt = (docTitle, docKeywords) => {\n        if (!docTitle && !docKeywords) {\n            return __(\n                \"Generate documentation using HTML heading tags for the title. Include details on {Documentation Keywords} and wrap all content in <p> tags. Highlight headings and keywords with <span class='highlight'>.\",\n                'wedocs'\n            );\n        }\n\n        let dynamicPrompt = __(\n            \"Generate documentation using HTML heading tags for '{title}'. Include relevant details on {keywords} in the documentation. Wrap all content in <p> tags. Highlight headings and keywords with <span class='highlight'>.\",\n            'wedocs'\n        );\n\n        // Replace placeholders with actual values\n        if (docTitle) {\n            dynamicPrompt = dynamicPrompt.replace('{title}', docTitle);\n        } else {\n            dynamicPrompt = dynamicPrompt.replace(\"for '{title}'\", 'for the title');\n        }\n\n        if (docKeywords) {\n            dynamicPrompt = dynamicPrompt.replace('{keywords}', docKeywords);\n        } else {\n            dynamicPrompt = dynamicPrompt.replace('Include relevant details on {keywords} in the documentation.', 'Include relevant details in the documentation.');\n        }\n\n        return dynamicPrompt;\n    };\n\n    // Update prompt when title or keywords change\n    useEffect(() => {\n        const dynamicPrompt = generateDynamicPrompt(title, keywords);\n        setPrompt(dynamicPrompt);\n    }, [title, keywords]);\n\n    const handleGenerate = async () => {\n        if (!title.trim()) {\n            setError(__('Please enter a documentation title.', 'wedocs'));\n            return;\n        }\n\n        if (!keywords.trim()) {\n            setError(__('Please enter keywords to guide the AI.', 'wedocs'));\n            return;\n        }\n\n        setError('');\n        setIsGenerating(true);\n\n        try {\n            // Simulate AI generation (static content for now)\n            await new Promise(resolve => setTimeout(resolve, 2000));\n            \n            const mockContent = `\n                <h2><span class=\"highlight\">Introduction</span></h2>\n                <p>This is AI-generated content for: <strong>${title}</strong></p>\n                <p>Keywords: <span class=\"highlight\">${keywords}</span></p>\n                <p>Overwrite mode: <strong>${overwriteContent ? 'Enabled' : 'Disabled'}</strong></p>\n                <p>Prompt used: <em>${prompt.substring(0, 100)}${prompt.length > 100 ? '...' : ''}</em></p>\n                <h2><span class=\"highlight\">Key Features</span></h2>\n                <p>Based on your keywords and instructions, here's the generated content...</p>\n                <h2><span class=\"highlight\">Conclusion</span></h2>\n                <p>This content was generated using AI and can be customized as needed.</p>\n            `;\n            \n            setGeneratedContent(mockContent);\n            setShowPreview(true);\n        } catch (err) {\n            setError(__('Failed to generate content. Please try again.', 'wedocs'));\n        } finally {\n            setIsGenerating(false);\n        }\n    };\n\n    const handleAccept = () => {\n        // TODO: Implement content insertion logic\n        console.log('Accepting content:', generatedContent);\n        console.log('Overwrite mode:', overwriteContent);\n        onClose();\n    };\n\n    const handleReject = () => {\n        setShowPreview(false);\n        setGeneratedContent('');\n    };\n\n    const handleClose = () => {\n        setShowPreview(false);\n        setGeneratedContent('');\n        setError('');\n        onClose();\n    };\n\n    return (\n        <Modal\n            title={__('AI Doc Writer', 'wedocs')}\n            onRequestClose={handleClose}\n            className=\"wedocs-ai-doc-writer-modal\"\n            size=\"large\"\n        >\n            {!showPreview ? (\n                <VStack spacing={4}>\n                    <Card>\n                        <CardHeader>\n                            <h3>{__('Content Generation Settings', 'wedocs')}</h3>\n                        </CardHeader>\n                        <CardBody>\n                            <VStack spacing={3}>\n                                <TextControl\n                                    label={__('Documentation Title', 'wedocs')}\n                                    value={title}\n                                    onChange={setTitle}\n                                    placeholder={__('Enter your documentation title here...', 'wedocs')}\n                                    help={__('The title will be used to generate relevant content.', 'wedocs')}\n                                    __nextHasNoMarginBottom\n                                />\n\n                                <TextControl\n                                    label={__('Keywords', 'wedocs')}\n                                    value={keywords}\n                                    onChange={setKeywords}\n                                    placeholder={__('Add keywords to guide AI (comma-separated)...', 'wedocs')}\n                                    help={__('Enter relevant keywords separated by commas.', 'wedocs')}\n                                    __nextHasNoMarginBottom\n                                />\n\n                                <TextareaControl\n                                    label={__('AI Instructions', 'wedocs')}\n                                    value={prompt}\n                                    onChange={setPrompt}\n                                    rows={4}\n                                    placeholder={__('AI instructions will be auto-generated from title and keywords...', 'wedocs')}\n                                    help={__('Instructions are automatically generated from your title and keywords. You can edit them manually if needed.', 'wedocs')}\n                                    __nextHasNoMarginBottom\n                                />\n\n                                <ToggleControl\n                                    label={__('Overwrite your existing Doc', 'wedocs')}\n                                    checked={overwriteContent}\n                                    onChange={setOverwriteContent}\n                                    help={__('When enabled, AI content will replace the entire document. When disabled, content will be inserted at the current cursor position.', 'wedocs')}\n                                />\n                            </VStack>\n                        </CardBody>\n                    </Card>\n\n                    {error && (\n                        <Notice status=\"error\" isDismissible={false}>\n                            {error}\n                        </Notice>\n                    )}\n\n                    <HStack justify=\"flex-end\" spacing={2}>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            {__('Cancel', 'wedocs')}\n                        </Button>\n                        <Button\n                            variant=\"primary\"\n                            onClick={handleGenerate}\n                            disabled={isGenerating}\n                        >\n                            {isGenerating ? (\n                                <>\n                                    <Spinner />\n                                    {__('Generating...', 'wedocs')}\n                                </>\n                            ) : (\n                                __('Generate Content', 'wedocs')\n                            )}\n                        </Button>\n                    </HStack>\n                </VStack>\n            ) : (\n                <AiDocWriterPreview\n                    content={generatedContent}\n                    onAccept={handleAccept}\n                    onReject={handleReject}\n                    onClose={handleClose}\n                />\n            )}\n        </Modal>\n    );\n};\n\nexport default AiDocWriterModal;\n","import { __ } from '@wordpress/i18n';\nimport { Button, Notice, Card, CardBody, CardHeader, __experimentalHStack as HStack, __experimentalVStack as VStack } from '@wordpress/components';\n\nconst AiDocWriterPreview = ({ content, onAccept, onReject, onClose }) => {\n    return (\n        <VStack spacing={4}>\n            <Card>\n                <CardHeader>\n                    <h3>{__('AI Generated Content Preview', 'wedocs')}</h3>\n                </CardHeader>\n                <CardBody>\n                    <p>\n                        {__(\n                            'Review the generated content below. You can accept it to insert into your document or reject it to try again.',\n                            'wedocs'\n                        )}\n                    </p>\n                </CardBody>\n            </Card>\n\n            <Card>\n                <CardBody>\n                    <div \n                        dangerouslySetInnerHTML={{ __html: content }}\n                        style={{\n                            border: '1px solid #ddd',\n                            padding: '16px',\n                            borderRadius: '4px',\n                            backgroundColor: '#f9f9f9',\n                            maxHeight: '400px',\n                            overflowY: 'auto'\n                        }}\n                    />\n                </CardBody>\n            </Card>\n\n            <Notice status=\"info\" isDismissible={false}>\n                {__(\n                    'The content above is formatted with HTML tags. When inserted, it will be properly formatted in your document.',\n                    'wedocs'\n                )}\n            </Notice>\n\n            <HStack justify=\"flex-end\" spacing={2}>\n                <Button\n                    variant=\"tertiary\"\n                    onClick={onClose}\n                >\n                    {__('Cancel', 'wedocs')}\n                </Button>\n                <Button\n                    variant=\"secondary\"\n                    onClick={onReject}\n                >\n                    {__('Reject & Try Again', 'wedocs')}\n                </Button>\n                <Button\n                    variant=\"primary\"\n                    onClick={onAccept}\n                >\n                    {__('Accept & Insert', 'wedocs')}\n                </Button>\n            </HStack>\n        </VStack>\n    );\n};\n\nexport default AiDocWriterPreview;\n","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"editor\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"plugins\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"names":["__","useState","registerPlugin","PluginSidebar","useSelect","store","editorStore","coreStore","AiDocWriterModal","AiDocWriter","isModalOpen","setIsModalOpen","isViewable","postTypeName","select","postType","getCurrentPostType","postTypeObject","getPostType","viewable","console","log","createElement","Fragment","name","title","icon","style","padding","marginBottom","fontSize","color","onClick","className","width","height","fontWeight","isOpen","onClose","render","useEffect","Modal","Button","TextControl","TextareaControl","ToggleControl","Notice","Spinner","PanelBody","PanelRow","Card","CardBody","CardHeader","Flex","FlexItem","__experimentalHStack","HStack","__experimentalVStack","VStack","AiDocWriterPreview","setTitle","prompt","setPrompt","keywords","setKeywords","overwriteContent","setOverwriteContent","isGenerating","setIsGenerating","generatedContent","setGeneratedContent","showPreview","setShowPreview","error","setError","currentPost","getCurrentPost","getEditedPostContent","post","content","raw","rendered","generateDynamicPrompt","docTitle","docKeywords","dynamicPrompt","replace","handleGenerate","trim","Promise","resolve","setTimeout","mockContent","substring","length","err","handleAccept","handleReject","handleClose","onRequestClose","size","spacing","label","value","onChange","placeholder","help","__nextHasNoMarginBottom","rows","checked","status","isDismissible","justify","variant","disabled","onAccept","onReject","dangerouslySetInnerHTML","__html","border","borderRadius","backgroundColor","maxHeight","overflowY"],"sourceRoot":""}